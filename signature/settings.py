"""
Django settings for signature project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import json
import os
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u)k6p$@zf_3%urtdxxuba8&x8)*o_@sq$#rnd(guu@3m#8st1c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'common.apps.CommonConfig',        # 공통 요소
    'dashboard.apps.DashboardConfig',  # 대시보드 페이지
    'documents.apps.DocumentsConfig',  # 문서 페이지
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'signature.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'signature.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# database
# my_settings.py
secret_file = os.path.join(BASE_DIR, '.secrets.json')

with open(secret_file) as f:
    secrets = json.loads(f.read())


def get_secret(setting, secrets=secrets):
    try:
        return secrets[setting]
    except KeyError:
        print("error: secrets")

# aws mysql 포트 번호
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',  # 사용할 엔진 설정
#         'NAME': 'sig_db',                # 데이터베이스 이름
#         'USER': 'admin',                        # 데이터베이스 사용자 이름
#         'PASSWORD': get_secret("PASSWORD"),
#         # 데이터베이스 호스트 주소 (실제 DB 주소)
#         'HOST': 'signatur-mysql.c1vc93hburoi.ap-northeast-2.rds.amazonaws.com',
#         'PORT': '3306',                        # 데이터베이스 포트 번호
#     }
# }
SECRET_KEY = get_secret("SECRET_KEY")


# 구름 ide 
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 사용할 엔진 설정
        'NAME': 'sw_signature',                # 데이터베이스 이름
        'USER': 'root',                        # 데이터베이스 사용자 이름
        'PASSWORD': 'rkskek',
        'HOST': '127.0.0.1',                   # 데이터베이스 호스트 주소 (실제 DB 주소)
        'PORT': '3306',                        # 데이터베이스 포트 번호
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
) 


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'debug.log',
            'maxBytes': 1024*1024*1,  # 1 MB
            'backupCount': 1,
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'WARNING',
            'propagate': True,
        },
    },
}
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'file': {
#             'level': 'INFO',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'class': 'logging.FileHandler',
#             'filename': 'debug.log',
#             'maxBytes': 1024*1024*1,  # 1 MB
#             'backupCount': 1,
#         },
#         # 'file': {
#         #     'level': 'INFO','DEBUG'
#         #     'class': 'logging.handlers.RotatingFileHandler',
#         #     'filename': 'logs/debug.log',
#         #     'maxBytes': 1024*1024*1,  # 1 MB
#         #     'backupCount': 1,
#         # },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file'],
#             # 'level': 'DEBUG',
#             'level': 'WARNING',
#             'propagate': True,
#         },
#     },
# }


ALLOWED_HOSTS = ['*']
# [
#     # ".ap-northeast-2.compute.amazonaws.com",
#     # "ec2-3-35-103-217.ap-northeast-2.compute.amazonaws.com",
#     # 'localhost',
#     # '127.0.0.1',
#     # '127.0.0.1:8000',
#     # '3.35.103.217',
#     *
# ]


FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
    # 추가적인 파일 업로드 핸들러를 여기에 추가할 수 있습니다.
]


SESSION_COOKIE_AGE = 3600  # 세션의 만료 시간을 1시간으로 설정
